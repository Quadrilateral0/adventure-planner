[{"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\index.js":"1","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\App.js":"2","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\reportWebVitals.js":"3","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\assets\\colorPalette.js":"4","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Home.js":"5","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Signup.js":"6","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Login.js":"7","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Profile.js":"8","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\MealPlanning.js":"9","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Dashboard.js":"10","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Events.js":"11","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\SingleThought.js":"12","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Footer\\index.js":"13","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Header\\index.js":"14","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\mutations.js":"15","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\auth.js":"16","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Locations\\index.js":"17","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\queries.js":"18","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealList.js":"19","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js":"20","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js":"21","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js":"22","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js":"23","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentForm\\index.js":"24","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentList\\index.js":"25","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealForm.js":"26","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\Meal.js":"27","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Destinations.js":"28"},{"size":852,"mtime":1654447982584,"results":"29","hashOfConfig":"30"},{"size":3343,"mtime":1654614890461,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1654133927261,"results":"32","hashOfConfig":"30"},{"size":218,"mtime":1654447882160,"results":"33","hashOfConfig":"30"},{"size":1350,"mtime":1654614890468,"results":"34","hashOfConfig":"30"},{"size":4083,"mtime":1654447882161,"results":"35","hashOfConfig":"30"},{"size":3635,"mtime":1654555508023,"results":"36","hashOfConfig":"30"},{"size":1048,"mtime":1654614890469,"results":"37","hashOfConfig":"30"},{"size":306,"mtime":1654545425334,"results":"38","hashOfConfig":"30"},{"size":452,"mtime":1654275040901,"results":"39","hashOfConfig":"30"},{"size":212,"mtime":1654526413500,"results":"40","hashOfConfig":"30"},{"size":1448,"mtime":1654614890470,"results":"41","hashOfConfig":"30"},{"size":308,"mtime":1654555508018,"results":"42","hashOfConfig":"30"},{"size":6531,"mtime":1654614890465,"results":"43","hashOfConfig":"30"},{"size":1077,"mtime":1654133927262,"results":"44","hashOfConfig":"30"},{"size":1043,"mtime":1654133927262,"results":"45","hashOfConfig":"30"},{"size":128,"mtime":1654526413498,"results":"46","hashOfConfig":"30"},{"size":908,"mtime":1654133927262,"results":"47","hashOfConfig":"30"},{"size":4058,"mtime":1654621299100,"results":"48","hashOfConfig":"30"},{"size":2402,"mtime":1654526413499,"results":"49","hashOfConfig":"30"},{"size":1862,"mtime":1654278526263,"results":"50","hashOfConfig":"30"},{"size":2854,"mtime":1654614890467,"results":"51","hashOfConfig":"30"},{"size":1378,"mtime":1654614890467,"results":"52","hashOfConfig":"30"},{"size":2402,"mtime":1654614890464,"results":"53","hashOfConfig":"30"},{"size":953,"mtime":1654133927256,"results":"54","hashOfConfig":"30"},{"size":4194,"mtime":1654614986107,"results":"55","hashOfConfig":"30"},{"size":2600,"mtime":1654620753421,"results":"56","hashOfConfig":"30"},{"size":1014,"mtime":1654614890468,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"94ef8q",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\index.js",["126"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#33C4CF\",\n      main: \"#00B6C3\",\n      dark: \"#007F88\",\n      contrastText: \"#133042\",\n    },\n    secondary: {\n      light: \"#664B64\",\n      main: \"#401F3E\",\n      dark: \"#2C152B\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["127","128"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\App.js",["129","130","131","132","133","134"],"import React, { useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./assets/colorPalette\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport SingleThought from \"./pages/SingleThought\";\nimport Profile from \"./pages/Profile\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Destinations from \"./pages/Destinations\";\nimport MealPlanning from \"./pages/MealPlanning\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Events from \"./pages/Events\";\nrequire('dotenv').config();\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\nconst [items, setItems] = useState([  ]);\nconst [dataIsLoaded, setDataIsLoaded] = useState(false);\nuseEffect(() => {var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", \"Basic YzNjMjAyY2Y3ZDVhMTUzZTQ5MGU2NDgxY2I3NjlhY2E6OWQ3YjM5MDQ4MmU4YjNlMmU3NWRhNDEzMWFkOWQ3NmY=\");\n  \n  var raw = \"\";\n  \n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    // body: raw,\n    redirect: 'follow'\n  };\n  \n  fetch(\"https://api.roadgoat.com/api/v2/destinations/new-york-ny-usa\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));})\n  return (\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"flex-column justify-flex-start min-100-vh\">\n            <Header />\n            <div className=\"container\">\n              <Routes>\n              <Route path=\"/\" element={<Home />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/signup\" element={<Signup />} />\n                <Route path=\"/discussions\" element={<Profile />} />\n                <Route path=\"/profiles/:username\" element={<Profile />} />\n                <Route path=\"/thoughts/:thoughtId\" element={<SingleThought />} />\n                <Route path=\"/destinations\" element={<Destinations />} />\n                <Route path=\"/meal-planning\" element={<MealPlanning />} />\n                <Route path=\"/dashboard\" element={<Dashboard />} />\n              </Routes>\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </ApolloProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\reportWebVitals.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\assets\\colorPalette.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Home.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Signup.js",["135"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleFormSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"username\"\n                name=\"username\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                value={formState.name}\n                onChange={handleChange}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n\n          {error && (\n            <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n          )}\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Login.js",["136"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleFormSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={formState.email}\n            onChange={handleChange}\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={formState.password}\n            onChange={handleChange}\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n\n      {error && (\n        <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n      )}\n    </Container>\n  );\n};\n\nexport default Login;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Profile.js",["137","138","139","140","141"],"import React from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ThoughtForm from \"../components/ThoughtForm\";\nimport ThoughtList from \"../components/ThoughtList\";\n\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport { QUERY_THOUGHTS } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: \"1px dotted #1a1a1a\" }}\n        >\n          <ThoughtForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Discussions...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\MealPlanning.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Events.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Footer\\index.js",["142","143"],"import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"\">\n      <div className=\"\">\n      \n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Header\\index.js",["144","145"],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport { Link } from \"react-router-dom\";\nimport \"../../assets/css/header.css\";\nimport Auth from \"../../utils/auth\";\nimport Logo from '../../assets/images/group-it-logo.png';\n\nconst pages = [ 'dashboard', 'meal-planning', 'discussions'];\nconst settings = [ 'dashboard', 'destinations', 'meal-planning', 'discussions'];\n\nconst ResponsiveAppBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <img className='logo' src={Logo} sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n          <Typography \n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.1rem',\n              color: 'inherit',\n              textDecoration: 'none',\n              fontSize: '2rem',\n            }}\n          >\n            The Group Adventure Travel Planner\n          </Typography>\n          {Auth.loggedIn() ? (\n            <>\n            \n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              <Link className=\"homeMenu\" to={`/`}>Home</Link>\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">\n                    <Link to={`/${page}`}>{page}</Link>\n                  </Typography>\n                </MenuItem>\n              ))}\n             \n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 900,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            Group It\n          </Typography>\n\n          <Box className='navBar'  sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n\n          <Button\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n\n          <Link className=\"pageNav\" to={`/`}>HOME</Link>\n\n          </Button>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                <Link className='pageNav' to={`/${page}`}>{page}</Link>\n              </Button>\n            ))}\n            \n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt={Auth.getProfile().data.username} src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              <MenuItem onClick={handleCloseUserMenu}>\n              <Link className=\"homeProfile\" to={`/`}>Home</Link>\n              </MenuItem>\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\"><Link to={`/${setting}`}>{setting}</Link></Typography>\n                </MenuItem>\n              ))}\n              <MenuItem onClick={handleCloseUserMenu}>\n              <div className=\"btnLO\"  onClick={logout}>\n                Logout\n              </div>\n              </MenuItem>\n            </Menu>\n          </Box>\n          </>\n          ) : (\n            <>\n             <Link className=\"\" to=\"/login\">\n                Log in &nbsp;\n              </Link>\n              <Link className=\"\" to=\"/signup\">\n                Sign up\n              </Link>\n            </>\n          )}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n\n\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\mutations.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\auth.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Locations\\index.js",[],["146","147"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\queries.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealList.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js",["148"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n     },\n   });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What would you like to discuss?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add A Discussion\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to start a discussion. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentForm\\index.js",["149"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealForm.js",["150"],"import React, { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Avatar from \"@mui/material/Avatar\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\n\nfunction MealForm(props) {\n  const [input, setInput] = useState(\"\");\n  let [type, setType] = useState(\"\");\n  let [day, setDay] = useState(\"\");\n\n  const typeLevel = [\"breakfast\", \"lunch\", \"dinner\", \"TBD\"];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!type) {\n      type = \"TBD\";\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: input,\n      type: type,\n      day: day,\n    });\n\n    setInput(\"\");\n    setType(\"\");\n    setDay(\"\");\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleDayChange = (event) => {\n    setDay(event.target.value);\n  };\n\n  // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n  return !props.edit ? (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        component=\"form\"\n        className=\"meal-form\"\n        onSubmit={handleSubmit}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        {/* <form className=\"meal-form\" onSubmit={handleSubmit}> */}\n        <TextField\n          type=\"text\"\n          placeholder=\"Add to your meal list\"\n          value={input}\n          name=\"text\"\n          className=\"meal-input\"\n          onChange={handleChange}\n        ></TextField>\n        <div className=\"dropdown\">\n          <h3 className={`dropbtn ${type}`}>{type || \"Type of Meal\"}</h3>\n          <div className=\"dropdown-content\">\n            <Button onClick={() => setType(typeLevel[0])}>Breakfast</Button>\n            <Button onClick={() => setType(typeLevel[1])}>Lunch</Button>\n            <Button onClick={() => setType(typeLevel[2])}>Dinner</Button>\n          </div>\n        </div>\n        <FormControl fullWidth>\n          <InputLabel id=\"day-select-label\">Day</InputLabel>\n          <Select\n            labelId=\"day-select-label\"\n            id=\"day-select\"\n            value={day}\n            label=\"Day\"\n            onChange={handleDayChange}\n          >\n            <MenuItem value={\"Monday\"}>Monday</MenuItem>\n            <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n            <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n            <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n            <MenuItem value={\"Friday\"}>Friday</MenuItem>\n            <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n            <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n          </Select>\n        </FormControl>\n        <Button type=\"submit\" className=\"meal-Button\">\n          Add meal list item\n        </Button>\n      </Box>\n    </Container>\n  ) : (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        component=\"form\"\n        className=\"meal-form\"\n        onSubmit={handleSubmit}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        <h3>Update entry: {props.edit.value}</h3>\n\n        <TextField\n          type=\"text\"\n          placeholder={props.edit.value}\n          value={input}\n          name=\"text\"\n          className=\"meal-input\"\n          onChange={handleChange}\n        ></TextField>\n        <div className=\"dropdown\">\n          <h4 className={`dropbtn ${type}`}>{type || \"Type of Meal\"}</h4>\n          <div className=\"dropdown-content\">\n            <Button onClick={() => setType(typeLevel[0])}>Breakfast</Button>\n            <Button onClick={() => setType(typeLevel[1])}>Lunch</Button>\n            <Button onClick={() => setType(typeLevel[2])}>Dinner</Button>\n          </div>\n        </div>\n        <Button type=\"submit\" className=\"meal-button\">\n          Update\n        </Button>\n        {/* </form> */}\n      </Box>\n    </Container>\n  );\n}\n\nexport default MealForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\Meal.js",["151"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Destinations.js",[],{"ruleId":"152","severity":1,"message":"153","line":9,"column":7,"nodeType":"154","messageId":"155","endLine":9,"endColumn":12},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"160","line":23,"column":8,"nodeType":"154","messageId":"155","endLine":23,"endColumn":14},{"ruleId":"152","severity":1,"message":"161","line":51,"column":8,"nodeType":"154","messageId":"155","endLine":51,"endColumn":13},{"ruleId":"152","severity":1,"message":"162","line":51,"column":15,"nodeType":"154","messageId":"155","endLine":51,"endColumn":23},{"ruleId":"152","severity":1,"message":"163","line":52,"column":8,"nodeType":"154","messageId":"155","endLine":52,"endColumn":20},{"ruleId":"152","severity":1,"message":"164","line":52,"column":22,"nodeType":"154","messageId":"155","endLine":52,"endColumn":37},{"ruleId":"152","severity":1,"message":"165","line":56,"column":7,"nodeType":"154","messageId":"155","endLine":56,"endColumn":10},{"ruleId":"152","severity":1,"message":"166","line":25,"column":28,"nodeType":"154","messageId":"155","endLine":25,"endColumn":32},{"ruleId":"152","severity":1,"message":"166","line":21,"column":26,"nodeType":"154","messageId":"155","endLine":21,"endColumn":30},{"ruleId":"152","severity":1,"message":"167","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"168","line":2,"column":20,"nodeType":"154","messageId":"155","endLine":2,"endColumn":29},{"ruleId":"152","severity":1,"message":"169","line":8,"column":10,"nodeType":"154","messageId":"155","endLine":8,"endColumn":20},{"ruleId":"152","severity":1,"message":"170","line":8,"column":22,"nodeType":"154","messageId":"155","endLine":8,"endColumn":30},{"ruleId":"152","severity":1,"message":"171","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":12},{"ruleId":"152","severity":1,"message":"172","line":5,"column":9,"nodeType":"154","messageId":"155","endLine":5,"endColumn":17},{"ruleId":"152","severity":1,"message":"173","line":6,"column":9,"nodeType":"154","messageId":"155","endLine":6,"endColumn":17},{"ruleId":"152","severity":1,"message":"174","line":14,"column":8,"nodeType":"154","messageId":"155","endLine":14,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":49,"column":11,"nodeType":"177","endLine":49,"endColumn":98},{"ruleId":"156","replacedBy":"178"},{"ruleId":"158","replacedBy":"179"},{"ruleId":"152","severity":1,"message":"166","line":34,"column":15,"nodeType":"154","messageId":"155","endLine":34,"endColumn":19},{"ruleId":"152","severity":1,"message":"166","line":19,"column":15,"nodeType":"154","messageId":"155","endLine":19,"endColumn":19},{"ruleId":"152","severity":1,"message":"180","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":62,"column":1,"nodeType":"183","messageId":"184","endLine":105,"endColumn":2},"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["185"],"no-negated-in-lhs",["186"],"'Events' is defined but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'dataIsLoaded' is assigned a value but never used.","'setDataIsLoaded' is assigned a value but never used.","'raw' is assigned a value but never used.","'data' is assigned a value but never used.","'Navigate' is defined but never used.","'useParams' is defined but never used.","'QUERY_USER' is defined but never used.","'QUERY_ME' is defined but never used.","'Auth' is defined but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.","'AdbIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["185"],["186"],"'Avatar' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]