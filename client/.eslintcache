[{"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\index.js":"1","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\App.js":"2","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\reportWebVitals.js":"3","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\assets\\colorPalette.js":"4","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Home.js":"5","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Signup.js":"6","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Login.js":"7","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\MealPlanning.js":"8","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Dashboard.js":"9","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Events.js":"10","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\SingleThought.js":"11","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Footer\\index.js":"12","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Header\\index.js":"13","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\mutations.js":"14","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\auth.js":"15","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Locations\\index.js":"16","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\queries.js":"17","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealList.js":"18","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js":"19","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js":"20","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js":"21","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js":"22","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentForm\\index.js":"23","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentList\\index.js":"24","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealForm.js":"25","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\Meal.js":"26","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Destinations.js":"27","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Discussions.js":"28","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\CardDetails.js":"29","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\StyledCards.js":"30","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\index.js":"31"},{"size":501,"mtime":1654960320491,"results":"32","hashOfConfig":"33"},{"size":2827,"mtime":1654877425070,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1654133927261,"results":"35","hashOfConfig":"33"},{"size":356,"mtime":1654877425071,"results":"36","hashOfConfig":"33"},{"size":5578,"mtime":1654961379884,"results":"37","hashOfConfig":"33"},{"size":4088,"mtime":1654792341507,"results":"38","hashOfConfig":"33"},{"size":3643,"mtime":1654792341506,"results":"39","hashOfConfig":"33"},{"size":306,"mtime":1654545425334,"results":"40","hashOfConfig":"33"},{"size":452,"mtime":1654275040901,"results":"41","hashOfConfig":"33"},{"size":212,"mtime":1654526413500,"results":"42","hashOfConfig":"33"},{"size":1990,"mtime":1654877425079,"results":"43","hashOfConfig":"33"},{"size":598,"mtime":1654882155741,"results":"44","hashOfConfig":"33"},{"size":7046,"mtime":1654959571642,"results":"45","hashOfConfig":"33"},{"size":1295,"mtime":1654792228463,"results":"46","hashOfConfig":"33"},{"size":1043,"mtime":1654133927262,"results":"47","hashOfConfig":"33"},{"size":128,"mtime":1654526413498,"results":"48","hashOfConfig":"33"},{"size":1217,"mtime":1654792228464,"results":"49","hashOfConfig":"33"},{"size":3453,"mtime":1654792228456,"results":"50","hashOfConfig":"33"},{"size":2402,"mtime":1654526413499,"results":"51","hashOfConfig":"33"},{"size":1862,"mtime":1654278526263,"results":"52","hashOfConfig":"33"},{"size":3418,"mtime":1654877425076,"results":"53","hashOfConfig":"33"},{"size":2565,"mtime":1654877425077,"results":"54","hashOfConfig":"33"},{"size":2895,"mtime":1654881082429,"results":"55","hashOfConfig":"33"},{"size":1195,"mtime":1654877425073,"results":"56","hashOfConfig":"33"},{"size":6239,"mtime":1654877425076,"results":"57","hashOfConfig":"33"},{"size":3751,"mtime":1654877425075,"results":"58","hashOfConfig":"33"},{"size":1759,"mtime":1654877405379,"results":"59","hashOfConfig":"33"},{"size":1394,"mtime":1654886014795,"results":"60","hashOfConfig":"33"},{"size":956,"mtime":1654897514027,"results":"61","hashOfConfig":"33"},{"size":750,"mtime":1654897279642,"results":"62","hashOfConfig":"33"},{"size":3539,"mtime":1654961690515,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"94ef8q",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\App.js",["137","138","139"],"import React, { useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./assets/colorPalette\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport SingleThought from \"./pages/SingleThought\";\nimport Discussions from \"./pages/Discussions\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Destinations from \"./pages/Destinations\";\nimport MealPlanning from \"./pages/MealPlanning\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Events from \"./pages/Events\";\nrequire(\"dotenv\").config();\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"flex-column justify-flex-start min-100-vh\">\n            <Header />\n            <div className=\"container\">\n              <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/signup\" element={<Signup />} />\n                <Route path=\"/discussions\" element={<Discussions />} />\n                <Route\n                  path=\"/Discussions/:username\"\n                  element={<Discussions />}\n                />\n                <Route\n                  path=\"/thoughts/:thoughtId\"\n                  element={<SingleThought />}\n                />\n                <Route path=\"/destinations\" element={<Destinations />} />\n                <Route path=\"/meal-planning\" element={<MealPlanning />} />\n                <Route path=\"/dashboard\" element={<Dashboard />} />\n              </Routes>\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </ApolloProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",["140","141"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\reportWebVitals.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\assets\\colorPalette.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Home.js",["142","143"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Signup.js",["144"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleFormSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"username\"\n                name=\"username\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                value={formState.name}\n                onChange={handleChange}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"/Login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n\n          {error && (\n            <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n          )}\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Login.js",["145"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleFormSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={formState.email}\n            onChange={handleChange}\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={formState.password}\n            onChange={handleChange}\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n\n      {error && (\n        <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n      )}\n    </Container>\n  );\n};\n\nexport default Login;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\MealPlanning.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Events.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Footer\\index.js",["146","147"],"import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Typography, Link } from \"@mui/material\";\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <Typography\n      sx={{ my: 2 }}\n      variant=\"body2\"\n      backgroundColor=\"rgba(255, 255, 255, 0)\"\n      color=\"secondary.main\"\n      align=\"center\"\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Group It Travel\n      </Link>{\" \"}\n      {2022}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\mutations.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\auth.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Locations\\index.js",[],["148","149"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\queries.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealList.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js",["150"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_THOUGHT } from \"../../utils/mutations\";\nimport { QUERY_THOUGHTS } from \"../../utils/queries\";\n\nimport Auth from \"../../utils/auth\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Alert from \"@mui/material/Alert\";\nimport Typography from \"@mui/material/Typography\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShare } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState(\"\");\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"thoughtText\" && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Create a Discussion</Typography>\n\n      {Auth.loggedIn() ? (\n        <>\n          <Typography\n            component={\"span\"}\n            className={`m-0 ${\n              characterCount === 280 || error ? \"text-danger\" : \"\"\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </Typography>\n          <Box\n            component=\"form\"\n            className=\"thought-form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{\n              mt: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TextField\n              type=\"text\"\n              name=\"thoughtText\"\n              placeholder=\"Start a discussion\"\n              className=\"form-input\"\n              value={thoughtText}\n              onChange={handleChange}\n            ></TextField>\n            <Button sx={{ mt: 1 }} type=\"submit\" variant=\"contained\">\n              <FontAwesomeIcon icon={faShare} color=\"#6B3567\" />\n            </Button>\n          </Box>\n          {error && (\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Alert severity=\"error\">This field is required</Alert>\n            </Stack>\n          )}\n        </>\n      ) : (\n        <Stack sx={{ width: \"100%\" }} spacing={2}>\n          <Alert severity=\"error\">\n            You need to be logged in to start a discussion. Please{\" \"}\n            <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n          </Alert>\n        </Stack>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentForm\\index.js",["151"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport MessageIcon from \"@mui/icons-material/Message\";\n\nimport { ADD_COMMENT } from \"../../utils/mutations\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Alert from \"@mui/material/Alert\";\nimport Auth from \"../../utils/auth\";\nimport Typography from \"@mui/material/Typography\";\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"commentText\" && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Typography variant={\"h5\"} sx={{ pt: 2 }}>\n        Care to comment?\n      </Typography>\n\n      {Auth.loggedIn() ? (\n        <>\n          <Typography sx={{ pt: 2 }} variant=\"span\">\n            Character Count: {characterCount}/280\n            {error && (\n              <Stack sx={{ width: \"100%\" }} spacing={2}>\n                <Alert severity=\"error\">This field is required</Alert>\n              </Stack>\n            )}\n          </Typography>\n          <Box\n            component=\"form\"\n            className=\"comment-form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{\n              mt: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TextField\n              type=\"text\"\n              name=\"commentText\"\n              placeholder=\"Add your comment\"\n              className=\"form-input\"\n              value={commentText}\n              onChange={handleChange}\n            ></TextField>\n            <Button\n              sx={{ mt: 1 }}\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"medium\"\n            >\n              <MessageIcon color=\"#6B3567\" size=\"lg\" />\n            </Button>\n          </Box>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </Box>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentList\\index.js",["152","153"],"import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nconst CommentList = ({ comments = [] }) => {\n  if (!comments.length) {\n    return (\n      <Box sx={{ m: 2, width: \"100%\" }}>\n        {\" \"}\n        <Typography variant={\"h5\"}>No Comments Yet.</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box sx={{ py: 2, my: 3, width: \"100%\" }}>\n        <Typography variant={\"h5\"}>Comments</Typography>\n        {comments &&\n          comments.map((comment) => (\n            <div key={comment._id}>\n              <Box sx={{ p: 2, boxShadow: 1 }}>\n                <Typography variant=\"h6\" className=\"card-body\">\n                  {comment.commentText}\n                </Typography>\n                <Typography variant=\"span\">\n                  {comment.commentAuthor}{\" \"}\n                  <span style={{ fontSize: \"0.825rem\" }}>\n                    {comment.createdAt}\n                  </span>\n                </Typography>\n              </Box>\n            </div>\n          ))}\n      </Box>\n    </>\n  );\n};\n\nexport default CommentList;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\MealForm.js",["154","155","156"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Avatar from \"@mui/material/Avatar\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_MEAL } from \"../../utils/mutations\";\nimport { QUERY_MEALS } from \"../../utils/queries\";\nimport Auth from \"../../utils/auth\";\n\nfunction MealForm(props) {\n  const [text, setText] = useState(\"\");\n  let [type, setType] = useState(\"\");\n  let [day, setDay] = useState(\"\");\n\n  const typeLevel = [\"breakfast\", \"lunch\", \"dinner\", \"TBD\"];\n\n  const [addMeal, { error }] = useMutation(ADD_MEAL, {\n    update(cache, { data: { addMeal } }) {\n      try {\n        const { meals } = cache.readQuery({ query: QUERY_MEALS });\n\n        cache.writeQuery({\n          query: QUERY_MEALS,\n          data: { meals: [addMeal, ...meals] },\n        });\n      } catch (e) {\n        // console.error(e);\n      }\n    },\n  });\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!type) {\n      type = \"TBD\";\n    }\n\n    try {\n      const { data } = await addMeal({\n        variables: {\n          text,\n          type,\n          day,\n          author: Auth.getProfile().data.username,\n        },\n      });\n\n      setText(\"\");\n      setType(\"\");\n      setDay(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: text,\n      type: type,\n      day: day,\n    });\n\n    setText(\"\");\n    setType(\"\");\n    setDay(\"\");\n  };\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleDayChange = (event) => {\n    setDay(event.target.value);\n  };\n\n  // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n  return Auth.loggedIn && !props.edit ? (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        component=\"form\"\n        className=\"meal-form\"\n        onSubmit={handleSubmit}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        <TextField\n          type=\"text\"\n          placeholder=\"Add meal to your list\"\n          value={text}\n          name=\"text\"\n          className=\"meal-input\"\n          onChange={handleChange}\n        ></TextField>\n        <div className=\"dropdown\">\n          <h3 className={`dropbtn ${type}`}>{type || \"Type of Meal\"}</h3>\n          <div className=\"dropdown-content\">\n            <Button color=\"secondary\" onClick={() => setType(typeLevel[0])}>\n              Breakfast\n            </Button>\n            <Button color=\"secondary\" onClick={() => setType(typeLevel[1])}>\n              Lunch\n            </Button>\n            <Button color=\"secondary\" onClick={() => setType(typeLevel[2])}>\n              Dinner\n            </Button>\n          </div>\n        </div>\n        <FormControl fullWidth>\n          <InputLabel id=\"day-select-label\">Day</InputLabel>\n          <Select\n            labelId=\"day-select-label\"\n            id=\"day-select\"\n            value={day}\n            label=\"Day\"\n            onChange={handleDayChange}\n          >\n            <MenuItem value={\"Monday\"}>Monday</MenuItem>\n            <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n            <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n            <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n            <MenuItem value={\"Friday\"}>Friday</MenuItem>\n            <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n            <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n          </Select>\n        </FormControl>\n        <Button type=\"submit\" variant=\"contained\" className=\"meal-Button\">\n          Add meal list item\n        </Button>\n      </Box>\n    </Container>\n  ) : Auth.loggedIn ? (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        component=\"form\"\n        className=\"meal-form\"\n        onSubmit={handleSubmit}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        <h3>Update entry: {props.edit.value}</h3>\n\n        <TextField\n          type=\"text\"\n          placeholder={props.edit.value}\n          value={text}\n          name=\"text\"\n          className=\"meal-input\"\n          onChange={handleChange}\n        ></TextField>\n        <div className=\"dropdown\">\n          <h4 className={`dropbtn ${type}`}>{type || \"Type of Meal\"}</h4>\n          <div className=\"dropdown-content\">\n            <Button color=\"secondary\" onClick={() => setType(typeLevel[0])}>\n              Breakfast\n            </Button>\n            <Button color=\"secondary\" onClick={() => setType(typeLevel[1])}>\n              Lunch\n            </Button>\n            <Button color=\"secondary\" onClick={() => setType(typeLevel[2])}>\n              Dinner\n            </Button>\n          </div>\n        </div>\n        <FormControl fullWidth>\n          <InputLabel id=\"day-select-label\">Day</InputLabel>\n          <Select\n            labelId=\"day-select-label\"\n            id=\"day-select\"\n            value={day}\n            label=\"Day\"\n            onChange={handleDayChange}\n          >\n            <MenuItem value={\"Monday\"}>Monday</MenuItem>\n            <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n            <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n            <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n            <MenuItem value={\"Friday\"}>Friday</MenuItem>\n            <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n            <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n          </Select>\n        </FormControl>\n        <Button variant=\"contained\" type=\"submit\" className=\"meal-button\">\n          Update\n        </Button>\n      </Box>\n    </Container>\n  ) : (\n    <p>\n      You need to be logged in to start a discussion. Please{\" \"}\n      <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n    </p>\n  );\n}\n\nexport default MealForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealPlanner\\Meal.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Destinations.js",["157","158","159","160"],"import React from \"react\";\nimport { useState } from \"react\";\nvar requestOptions = {\n  method: \"GET\",\n  headers: {\n    Authorization: `Basic YzNjMjAyY2Y3ZDVhMTUzZTQ5MGU2NDgxY2I3NjlhY2E6OWQ3YjM5MDQ4MmU4YjNlMmU3NWRhNDEzMWFkOWQ3NmY=`,\n  },\n  redirect: \"follow\",\n};\n\nfunction Destinations(props) {\n  const [items, setItems] = useState([]);\n  const [dataIsLoaded, setDataIsLoaded] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  var slug = [];\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`Let's go to ${search}!`);\n    fetch(\n      `https://api.roadgoat.com/api/v2/destinations/auto_complete?q=${search}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then(function (data) {\n        bulkApi(data[\"data\"][0][\"attributes\"][\"slug\"]);\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n  function bulkApi(slug) {\n    fetch(\n      `https://api.roadgoat.com/api/v2/destinations/${slug}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then(function (data) {\n        console.log(data);\n      });\n  }\n  return (\n    <div>\n      <form className=\"locations\" onSubmit={handleSubmit}>\n        <label>\n          Search for your next destination:\n          <input\n            type=\"text\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </label>\n        <input\n          type=\"submit\"\n          className=\"btn btn-lg btn-info m-2\"\n          id=\"margin-normal\"\n          margin=\"normal\"\n        />\n      </form>\n      <div>\n        <div>\n          {items.map((items) => (\n            <div key={items.id}></div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Destinations;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Discussions.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\CardDetails.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\StyledCards.js",["161","162"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\index.js",["163","164"],{"ruleId":"165","severity":1,"message":"166","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"169","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"170","line":23,"column":8,"nodeType":"167","messageId":"168","endLine":23,"endColumn":14},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"165","severity":1,"message":"175","line":7,"column":10,"nodeType":"167","messageId":"168","endLine":7,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":124,"column":1,"nodeType":"178","messageId":"179","endLine":175,"endColumn":2},{"ruleId":"165","severity":1,"message":"180","line":25,"column":28,"nodeType":"167","messageId":"168","endLine":25,"endColumn":32},{"ruleId":"165","severity":1,"message":"180","line":21,"column":26,"nodeType":"167","messageId":"168","endLine":21,"endColumn":30},{"ruleId":"165","severity":1,"message":"181","line":6,"column":9,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"165","severity":1,"message":"182","line":7,"column":9,"nodeType":"167","messageId":"168","endLine":7,"endColumn":17},{"ruleId":"171","replacedBy":"183"},{"ruleId":"173","replacedBy":"184"},{"ruleId":"165","severity":1,"message":"180","line":42,"column":15,"nodeType":"167","messageId":"168","endLine":42,"endColumn":19},{"ruleId":"165","severity":1,"message":"180","line":25,"column":15,"nodeType":"167","messageId":"168","endLine":25,"endColumn":19},{"ruleId":"165","severity":1,"message":"185","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":12},{"ruleId":"165","severity":1,"message":"186","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":19},{"ruleId":"165","severity":1,"message":"187","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"165","severity":1,"message":"188","line":26,"column":21,"nodeType":"167","messageId":"168","endLine":26,"endColumn":26},{"ruleId":"165","severity":1,"message":"180","line":48,"column":15,"nodeType":"167","messageId":"168","endLine":48,"endColumn":19},{"ruleId":"165","severity":1,"message":"189","line":12,"column":17,"nodeType":"167","messageId":"168","endLine":12,"endColumn":25},{"ruleId":"165","severity":1,"message":"190","line":13,"column":10,"nodeType":"167","messageId":"168","endLine":13,"endColumn":22},{"ruleId":"165","severity":1,"message":"191","line":13,"column":24,"nodeType":"167","messageId":"168","endLine":13,"endColumn":39},{"ruleId":"165","severity":1,"message":"192","line":15,"column":7,"nodeType":"167","messageId":"168","endLine":15,"endColumn":11},{"ruleId":"165","severity":1,"message":"193","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":18,"column":1,"nodeType":"196","endLine":29,"endColumn":2},{"ruleId":"165","severity":1,"message":"197","line":11,"column":7,"nodeType":"167","messageId":"168","endLine":11,"endColumn":13},{"ruleId":"198","severity":2,"message":"199","line":23,"column":19,"nodeType":"167","messageId":"200","endLine":23,"endColumn":28},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Events' is defined but never used.","no-native-reassign",["201"],"no-negated-in-lhs",["202"],"'ClassNames' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'data' is assigned a value but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.",["201"],["202"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'Avatar' is defined but never used.","'error' is assigned a value but never used.","'setItems' is assigned a value but never used.","'dataIsLoaded' is assigned a value but never used.","'setDataIsLoaded' is assigned a value but never used.","'slug' is assigned a value but never used.","'makeStyles' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'styled' is assigned a value but never used.","no-undef","'useStyles' is not defined.","undef","no-global-assign","no-unsafe-negation"]