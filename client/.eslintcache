[{"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\index.js":"1","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\App.js":"2","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\reportWebVitals.js":"3","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Home.js":"4","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\assets\\colorPalette.js":"5","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\SingleThought.js":"6","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Discussions.js":"7","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Login.js":"8","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Signup.js":"9","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Destinations.js":"10","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Dashboard.js":"11","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\MealPlanning.js":"12","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Footer\\index.js":"13","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Header\\index.js":"14","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\auth.js":"15","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\mutations.js":"16","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\queries.js":"17","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js":"18","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js":"19","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\index.js":"20","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentForm\\index.js":"21","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentList\\index.js":"22","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js":"23","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js":"24","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealForm\\index.js":"25","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealList\\index.js":"26","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\CardDetails.js":"27","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\TripCard\\index.js":"28","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\BudgetCard\\index.js":"29","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\TripDetails\\index.js":"30"},{"size":500,"mtime":1655067183876,"results":"31","hashOfConfig":"32"},{"size":2765,"mtime":1655067183720,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1654966104264,"results":"34","hashOfConfig":"32"},{"size":5138,"mtime":1655146987853,"results":"35","hashOfConfig":"32"},{"size":380,"mtime":1655067183723,"results":"36","hashOfConfig":"32"},{"size":2638,"mtime":1655067183881,"results":"37","hashOfConfig":"32"},{"size":1944,"mtime":1655146643554,"results":"38","hashOfConfig":"32"},{"size":3663,"mtime":1655067183880,"results":"39","hashOfConfig":"32"},{"size":4106,"mtime":1655067183881,"results":"40","hashOfConfig":"32"},{"size":14232,"mtime":1655142823911,"results":"41","hashOfConfig":"32"},{"size":1090,"mtime":1655142787452,"results":"42","hashOfConfig":"32"},{"size":1397,"mtime":1655067183881,"results":"43","hashOfConfig":"32"},{"size":598,"mtime":1655067183863,"results":"44","hashOfConfig":"32"},{"size":7046,"mtime":1655067183863,"results":"45","hashOfConfig":"32"},{"size":1043,"mtime":1654966104265,"results":"46","hashOfConfig":"32"},{"size":1469,"mtime":1655067192352,"results":"47","hashOfConfig":"32"},{"size":1217,"mtime":1655067183883,"results":"48","hashOfConfig":"32"},{"size":3470,"mtime":1655142787450,"results":"49","hashOfConfig":"32"},{"size":3009,"mtime":1655146430938,"results":"50","hashOfConfig":"32"},{"size":3445,"mtime":1655067183866,"results":"51","hashOfConfig":"32"},{"size":2895,"mtime":1655067183860,"results":"52","hashOfConfig":"32"},{"size":1219,"mtime":1655067183861,"results":"53","hashOfConfig":"32"},{"size":3249,"mtime":1655067183871,"results":"54","hashOfConfig":"32"},{"size":2476,"mtime":1655067183872,"results":"55","hashOfConfig":"32"},{"size":4197,"mtime":1655067192350,"results":"56","hashOfConfig":"32"},{"size":3010,"mtime":1655133006306,"results":"57","hashOfConfig":"32"},{"size":923,"mtime":1655067183864,"results":"58","hashOfConfig":"32"},{"size":2135,"mtime":1655143250405,"results":"59","hashOfConfig":"32"},{"size":1017,"mtime":1655133006305,"results":"60","hashOfConfig":"32"},{"size":168,"mtime":1655142787451,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"94ef8q",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":9,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\index.js",[],["134","135"],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\App.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\reportWebVitals.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Home.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\assets\\colorPalette.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Discussions.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Login.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Signup.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Destinations.js",["136","137","138","139","140","141","142","143","144","145","146","147"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { Card, Grid, Box } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport Hotel from \"../assets/images/hotel-1749602_640.jpg\";\nimport City from \"../assets/images/dubai-1767540_640.jpg\";\nimport Plan from \"../assets/images/notepad-1130743_640.jpg\";\nimport Car from \"../assets/images/nature-4346917_640.jpg\";\nimport Safe from \"../assets/images/japan-2014618_640.jpg\";\nimport Money from \"../assets/images/banknotes-209104_640.jpg\";\n\nvar requestOptions = {\n  method: \"GET\",\n  headers: {\n    Authorization: `Basic YzNjMjAyY2Y3ZDVhMTUzZTQ5MGU2NDgxY2I3NjlhY2E6OWQ3YjM5MDQ4MmU4YjNlMmU3NWRhNDEzMWFkOWQ3NmY=`,\n  },\n  redirect: \"follow\",\n};\n\nfunction Destinations(props) {\n  const [items, setItems] = useState([]);\n  const [dataIsLoaded, setDataIsLoaded] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // alert(`Let's go to ${search}!`)\n    var myHeader =\n      (\"Authorization:\",\n      \"Basic YzNjMjAyY2Y3ZDVhMTUzZTQ5MGU2NDgxY2I3NjlhY2E6OWQ3YjM5MDQ4MmU4YjNlMmU3NWRhNDEzMWFkOWQ3NmY=\");\n    var requestOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Basic YzNjMjAyY2Y3ZDVhMTUzZTQ5MGU2NDgxY2I3NjlhY2E6OWQ3YjM5MDQ4MmU4YjNlMmU3NWRhNDEzMWFkOWQ3NmY=`,\n      },\n      // body: raw,\n      redirect: \"follow\",\n    };\n    fetch(\n      `https://api.roadgoat.com/api/v2/destinations/auto_complete?q=${search}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then(function (data) {\n        bulkApi(data[\"data\"][0][\"attributes\"][\"slug\"]);\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n  function bulkApi(slug) {\n    fetch(\n      `https://api.roadgoat.com/api/v2/destinations/${slug}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then(function (data) {\n        setItems([data]);\n        console.log(data);\n      });\n  }\n  return (\n    <div>\n      <Box\n        className=\"locations\"\n        onSubmit={handleSubmit}\n        component=\"form\"\n        sx={{\n          \"& > :not(style)\": { m: 1, width: \"25ch\" },\n          mt: 5,\n          mb: 5,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Where do you want to go?\"\n          variant=\"outlined\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n\n        <Button\n          type=\"submit\"\n          size=\"medium\"\n          variant=\"contained\"\n          className=\"btn btn-lg btn-info m-2\"\n          id=\"margin-normal\"\n          margin=\"normal\"\n        >\n          Search\n        </Button>\n      </Box>\n\n      <div>\n        <div>\n          {items.map((data) => (\n            <div key={data.id}>\n              <div\n                sx={{\n                  mt: 5,\n                  mb: 5,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Divider\n                  sx={{\n                    mt: 5,\n                    mb: 5,\n                  }}\n                >\n                  {data.data.attributes.name}\n                </Divider>\n              </div>\n              <Grid\n                container\n                rowSpacing={3}\n                columnSpacing={{ xs: 0, sm: 0, md: 0 }}\n              >\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"stretch\",\n                  }}\n                >\n                  <Card sx={{ minWidth: 345, height: 300, boxShadow: 4 }}>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"hotel\"\n                      height=\"140\"\n                      image={Hotel}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        Find Lodging\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                      ></Typography>\n                    </CardContent>\n                    <CardActions>\n                      <a href={data.data.attributes.airbnb_url} target=\"_blank\">\n                        <Button size=\"small\">AirBnB</Button>\n                      </a>\n                      <a\n                        href={data.data.attributes.kayak_lodgings_url}\n                        target=\"_blank\"\n                      >\n                        <Button size=\"small\">Kayak Lodgings</Button>\n                      </a>\n                      <a href={data.data.attributes.vrbo_url} target=\"_blank\">\n                        <Button size=\"small\">Vrbo</Button>\n                      </a>\n                    </CardActions>\n                  </Card>\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"stretch\",\n                  }}\n                >\n                  <Card sx={{ minWidth: 345, height: 300, boxShadow: 4 }}>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"Dubai\"\n                      height=\"140\"\n                      image={City}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        Make Plans\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                      ></Typography>\n                    </CardContent>\n                    <CardActions>\n                      <a\n                        href={data.data.attributes.alltrails_url}\n                        target=\"_blank\"\n                      >\n                        <Button size=\"small\">Go Hiking</Button>\n                      </a>\n                      <a\n                        href={data.data.attributes.getyourguide_url}\n                        target=\"_blank\"\n                      >\n                        <Button size=\"small\">Travel Guide</Button>\n                      </a>\n                      <a\n                        href={data.data.attributes.google_events_url}\n                        target=\"_blank\"\n                      >\n                        <Button size=\"small\">Google Events</Button>\n                      </a>\n                    </CardActions>\n                  </Card>\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"stretch\",\n                  }}\n                >\n                  <Card sx={{ minWidth: 345, height: 300, boxShadow: 4 }}>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"car\"\n                      height=\"140\"\n                      image={Car}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        Get Around\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                      ></Typography>\n                    </CardContent>\n                    <CardActions>\n                      <a\n                        href={data.data.attributes.walk_score_url}\n                        target=\"_blank\"\n                      >\n                        <Button size=\"small\">Walk Score</Button>\n                      </a>\n                      <a\n                        href={data.data.attributes.kayak_car_rental_url}\n                        target=\"_blank\"\n                      >\n                        <Button size=\"small\">Kayak Car Rental</Button>\n                      </a>\n                    </CardActions>\n                  </Card>\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"stretch\",\n                  }}\n                >\n                  <Card sx={{ minWidth: 345, height: 300, boxShadow: 4 }}>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"hotel\"\n                      height=\"140\"\n                      image={Plan}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        Learn More\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        <Box sx={{ typography: \"body1\" }}>\n                          <b>Population:</b> {data.data.attributes.population}\n                        </Box>\n                        <Box sx={{ typography: \"body1\" }}>\n                          <b>Popularity Rating (1-5):</b>{\" \"}\n                          {data.data.attributes.average_rating}\n                        </Box>\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <a\n                        href={data.data.attributes.wikipedia_url}\n                        target=\"_blank\"\n                      >\n                        <Button size=\"small\">Wikipedia</Button>\n                      </a>\n                    </CardActions>\n                  </Card>\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"stretch\",\n                  }}\n                >\n                  <Card sx={{ minWidth: 345, height: 300, boxShadow: 4 }}>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"Japan street\"\n                      height=\"140\"\n                      image={Safe}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        Stay Safe\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        <Box sx={{ typography: \"body1\" }}>\n                          <b>Density:</b>{\" \"}\n                          {data.data.attributes.destination_type}\n                        </Box>\n                        <Box sx={{ typography: \"body1\" }}>\n                          <b>Crime Risk:</b>{\" \"}\n                          {\n                            data[\"data\"][\"attributes\"][\"safety\"][\n                              data.data.attributes.name\n                            ][\"subText\"]\n                          }\n                        </Box>\n                      </Typography>\n                    </CardContent>\n                    <CardActions></CardActions>\n                  </Card>\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"stretch\",\n                  }}\n                >\n                  <Card sx={{ minWidth: 345, height: 300, boxShadow: 4 }}>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"money\"\n                      height=\"140\"\n                      image={Money}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        Plan Your Budget\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        <Box sx={{ typography: \"body1\" }}>\n                          <b>Daily Cost:</b>{\" \"}\n                          {\n                            data[\"data\"][\"attributes\"][\"budget\"][\n                              data.data.attributes.name\n                            ][\"text\"]\n                          }{\" \"}\n                          |{\" \"}\n                          {\n                            data[\"data\"][\"attributes\"][\"budget\"][\n                              data.data.attributes.name\n                            ][\"subText\"]\n                          }\n                          !\n                        </Box>\n                        <Box sx={{ typography: \"body1\" }}>\n                          <b>Cost Rating (1-8):</b>{\" \"}\n                          {\n                            data[\"data\"][\"attributes\"][\"budget\"][\n                              data.data.attributes.name\n                            ][\"value\"]\n                          }\n                        </Box>\n                      </Typography>\n                    </CardContent>\n                    <CardActions></CardActions>\n                  </Card>\n                </Grid>\n              </Grid>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Destinations;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\pages\\MealPlanning.js",["148"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"@apollo/client\";\nimport MealList from \"../components/MealList\";\nimport MealForm from \"../components/MealForm\";\nimport { QUERY_MEALS } from \"../utils/queries\";\nimport Background from \"../assets/images/meal-wallpaper.png\";\nimport { Card, CardContent, Box, Container, CssBaseline } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    backgroundImage: `url(${Background})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center center\",\n    backgroundAttachment: \"fixed\",\n    backgroundSize: \"cover\",\n    padding: \"2rem\",\n  },\n}));\n\nconst MealPlanning = () => {\n  const { loading, data } = useQuery(QUERY_MEALS);\n  const meals = data?.meals || [];\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container>\n        <Card\n          sx={{\n            p: 2,\n            mb: 2,\n            display: \"flex\",\n            backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n            justifyContent: \"center\",\n          }}\n        >\n          <CardContent>\n            <MealForm />\n          </CardContent>\n        </Card>\n        <Box className=\"mealPlanning\">\n          <MealList meals={meals} />\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default MealPlanning;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Footer\\index.js",["149","150"],"import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Typography, Link } from \"@mui/material\";\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <Typography\n      sx={{ my: 2 }}\n      variant=\"body2\"\n      backgroundColor=\"rgba(255, 255, 255, 0)\"\n      color=\"secondary.main\"\n      align=\"center\"\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Group It Travel\n      </Link>{\" \"}\n      {2022}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\auth.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\mutations.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\utils\\queries.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js",["151","152"],"import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport { MobileDateRangePicker } from \"@mui/x-date-pickers-pro/MobileDateRangePicker\";\nimport { DesktopDateRangePicker } from \"@mui/x-date-pickers-pro/DesktopDateRangePicker\";\nimport { useMediaQuery, Card, CardContent, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nconst CardStyled = styled(Card)({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  maxWidth: 545,\n  minHeight: 345,\n  padding: 2,\n  margin: \"0 auto\",\n  backgroundColor: \"#DDD\",\n});\nexport default function ResponsiveDateRangePicker() {\n  const [value, setValue] = useState([null, null]);\n  const matches = useMediaQuery(\"(pointer:fine)\");\n  let startDate = new Date(value[0]);\n  let endDate = new Date(value[1]);\n\n  useEffect(() => {\n    // console.log(value);\n    if (value[0] != null && value[1] != null) {\n      localStorage.setItem(\"value\", JSON.stringify(value));\n    }\n  }, [value]);\n  useEffect(() => {\n    const value = JSON.parse(localStorage.getItem(\"value\"));\n    if (value) {\n      setValue(value);\n      startDate = new Date(value[0]);\n      endDate = new Date(value[1]);\n    }\n  }, []);\n  return (\n    <CardStyled className=\"gradient-card\">\n      <CardContent>\n        <Typography\n          sx={{\n            color: \"#fff\",\n            fontSize: \"32px\",\n            fontWeight: 500,\n            textAlign: \"center\",\n            textShadow: \"3px 3px rgba(50, 50, 70, 0.5)\",\n          }}\n          variant=\"h4\"\n        >\n          Travel Dates\n        </Typography>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          {value[(0, 1)] != null ? (\n            <Typography sx={{ p: 2 }} variant=\"h6\">{`${\n              startDate.getMonth() + 1\n            }/${startDate.getDate()}/${startDate.getFullYear()} - ${\n              endDate.getMonth() + 1\n            }/${endDate.getDate()}/${endDate.getFullYear()} `}</Typography>\n          ) : null}\n          <Stack spacing={3}>\n            {!matches ? (\n              <MobileDateRangePicker\n                startText=\"Start\"\n                value={value}\n                onChange={(newValue) => {\n                  setValue(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <React.Fragment>\n                    <TextField {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField {...endProps} />\n                  </React.Fragment>\n                )}\n              />\n            ) : (\n              <DesktopDateRangePicker\n                startText=\"Start\"\n                value={value}\n                onChange={(newValue) => {\n                  console.log(newValue);\n                  setValue(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <React.Fragment>\n                    <TextField {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField {...endProps} />\n                  </React.Fragment>\n                )}\n              />\n            )}\n          </Stack>\n        </LocalizationProvider>\n      </CardContent>\n    </CardStyled>\n  );\n}\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\index.js",["153"],"import { React, useState } from \"react\";\nimport Maldives from \"../../assets/images/pexels-asad-photo-maldives-1450360.png\";\nimport Meal from \"../../assets/images/meal-planner.png\";\nimport Lightbulb from \"../../assets/images/lightbulb.png\";\nimport Collaborate from \"../../assets/images/collaborate.png\";\nimport { Card, CardMedia, CardContent, Typography, Grid } from \"@mui/material\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport details from \"./CardDetails\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 375,\n    background: \"rgba(0,0,0,0.5)\",\n    margin: \"20px\",\n  },\n  media: {\n    height: 250,\n  },\n});\n\nexport default function HomeCards() {\n  const classes = useStyles();\n  return (\n    <Grid id=\"home-cards\" container spacing={2}>\n      <Grid\n        item\n        xs={12}\n        md={6}\n        sx={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            component=\"img\"\n            image={Maldives}\n            alt=\"Maldives\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {details[0].title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"secondary.main\">\n              {details[0].description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={6}\n        sx={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            component=\"img\"\n            image={Lightbulb}\n            alt=\"green iguana\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {details[1].title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {details[1].description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>{\" \"}\n      <Grid\n        item\n        xs={12}\n        md={6}\n        sx={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            component=\"img\"\n            image={Collaborate}\n            alt=\"people pointing at a laptop screen together\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {details[2].title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {details[2].description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        md={6}\n        sx={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            component=\"img\"\n            image={Meal}\n            alt=\"prepared meals\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {details[3].title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {details[3].description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentForm\\index.js",["154"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport MessageIcon from \"@mui/icons-material/Message\";\n\nimport { ADD_COMMENT } from \"../../utils/mutations\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Alert from \"@mui/material/Alert\";\nimport Auth from \"../../utils/auth\";\nimport Typography from \"@mui/material/Typography\";\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"commentText\" && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Typography variant={\"h5\"} sx={{ pt: 2 }}>\n        Care to comment?\n      </Typography>\n\n      {Auth.loggedIn() ? (\n        <>\n          <Typography sx={{ pt: 2 }} variant=\"span\">\n            Character Count: {characterCount}/280\n            {error && (\n              <Stack sx={{ width: \"100%\" }} spacing={2}>\n                <Alert severity=\"error\">This field is required</Alert>\n              </Stack>\n            )}\n          </Typography>\n          <Box\n            component=\"form\"\n            className=\"comment-form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{\n              mt: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TextField\n              type=\"text\"\n              name=\"commentText\"\n              placeholder=\"Add your comment\"\n              className=\"form-input\"\n              value={commentText}\n              onChange={handleChange}\n            ></TextField>\n            <Button\n              sx={{ mt: 1 }}\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"medium\"\n            >\n              <MessageIcon color=\"#6B3567\" size=\"lg\" />\n            </Button>\n          </Box>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </Box>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\CommentList\\index.js",["155","156"],"import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nconst CommentList = ({ comments = [] }) => {\n  if (!comments.length) {\n    return (\n      <Box sx={{ m: 2, width: \"100%\" }}>\n        {\" \"}\n        <Typography variant={\"h5\"}>No Comments Yet.</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box sx={{ p: 2, my: 3, width: \"100%\", backgroundColor: \"#FFF\" }}>\n        <Typography variant={\"h5\"}>Comments</Typography>\n        {comments &&\n          comments.map((comment) => (\n            <div key={comment._id}>\n              <Box sx={{ p: 2, boxShadow: 1 }}>\n                <Typography variant=\"h6\" className=\"card-body\">\n                  {comment.commentText}\n                </Typography>\n                <Typography variant=\"span\">\n                  {comment.commentAuthor}{\" \"}\n                  <span style={{ fontSize: \"0.825rem\" }}>\n                    {comment.createdAt}\n                  </span>\n                </Typography>\n              </Box>\n            </div>\n          ))}\n      </Box>\n    </>\n  );\n};\n\nexport default CommentList;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js",["157"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_THOUGHT } from \"../../utils/mutations\";\nimport { QUERY_THOUGHTS } from \"../../utils/queries\";\nimport Auth from \"../../utils/auth\";\nimport {\n  Box,\n  TextField,\n  Button,\n  Stack,\n  Alert,\n  Typography,\n} from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShare } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState(\"\");\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"thoughtText\" && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Create a Discussion</Typography>\n\n      {Auth.loggedIn() ? (\n        <>\n          <Typography\n            component={\"span\"}\n            className={`m-0 ${\n              characterCount === 280 || error ? \"text-danger\" : \"\"\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </Typography>\n          <Box\n            component=\"form\"\n            className=\"thought-form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{\n              mt: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TextField\n              type=\"text\"\n              name=\"thoughtText\"\n              placeholder=\"Start a discussion\"\n              className=\"form-input\"\n              value={thoughtText}\n              onChange={handleChange}\n            ></TextField>\n            <Button sx={{ mt: 1 }} type=\"submit\" variant=\"contained\">\n              <FontAwesomeIcon icon={faShare} color=\"#6B3567\" />\n            </Button>\n          </Box>\n          {error && (\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Alert severity=\"error\">This field is required</Alert>\n            </Stack>\n          )}\n        </>\n      ) : (\n        <Stack sx={{ width: \"100%\" }} spacing={2}>\n          <Alert severity=\"error\">\n            You need to be logged in to start a discussion. Please{\" \"}\n            <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n          </Alert>\n        </Stack>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealForm\\index.js",["158"],"import React, { useState } from \"react\";\nimport {CssBaseline,TextField,Button,InputLabel,MenuItem, FormControl, Select,Typography, Box} from \"@mui/material\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_MEAL } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport { QUERY_MEALS } from \"../../utils/queries\";\n\nconst MealForm = () => {\n  const [text, setText] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const typeLevel = [\"breakfast\", \"lunch\", \"dinner\", \"TBD\"];\n\n  const [addMeal] = useMutation(ADD_MEAL, {\n    update(cache, { data: { addMeal } }) {\n      try {\n        const { meals } = cache.readQuery({ query: QUERY_MEALS });\n        cache.writeQuery({\n          query: QUERY_MEALS,\n          data: { meals: [addMeal, ...meals] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addMeal({\n        variables: {\n          text,\n          type,\n          day,\n          username: Auth.getProfile().data.username,\n        },\n      });\n      setText(\"\");\n      setType(\"\");\n      setDay(\"\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleDayChange = (event) => {\n    setDay(event.target.value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Add to Your Group's Meal Plan</Typography>\n      <CssBaseline />\n      <Box\n        component=\"form\"\n        className=\"meal-form\"\n        onSubmit={handleFormSubmit}\n        noValidate\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          type=\"text\"\n          placeholder=\"Add meal to your list\"\n          value={text}\n          name=\"text\"\n          className=\"meal-input\"\n          onChange={handleChange}\n        ></TextField>\n        <h3 className={`${type}`}>{type || \"Select Type of Meal\"}</h3>\n        <Box>\n          <Button\n            sx={[\n              { color: \"secondary.main\" },\n              {\n                \"&:focus\": {\n                  backgroundColor: \"secondary.dark\",\n                  color: \"secondary.contrastText\",\n                },\n              },\n            ]}\n            onClick={() => setType(typeLevel[0])}\n          >\n            Breakfast\n          </Button>\n          <Button\n            sx={[\n              { color: \"secondary.main\" },\n              {\n                \"&:focus\": {\n                  backgroundColor: \"secondary.dark\",\n                  color: \"secondary.contrastText\",\n                },\n              },\n            ]}\n            onClick={() => setType(typeLevel[1])}\n          >\n            Lunch\n          </Button>\n          <Button\n            sx={[\n              { color: \"secondary.main\" },\n              {\n                \"&:focus\": {\n                  backgroundColor: \"secondary.dark\",\n                  color: \"secondary.contrastText\",\n                },\n              },\n            ]}\n            onClick={() => setType(typeLevel[2])}\n          >\n            Dinner\n          </Button>\n        </Box>\n\n        <FormControl fullWidth>\n          <InputLabel id=\"day-select-label\">Day</InputLabel>\n          <Select\n            name=\"day\"\n            labelId=\"day-select-label\"\n            id=\"day-select\"\n            value={day}\n            label=\"Day\"\n            onChange={handleDayChange}\n          >\n            <MenuItem value={\"Monday\"}>Monday</MenuItem>\n            <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n            <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n            <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n            <MenuItem value={\"Friday\"}>Friday</MenuItem>\n            <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n            <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n          </Select>\n        </FormControl>\n        <Button type=\"submit\" variant=\"contained\" className=\"meal-Button\">\n          Add meal list item\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default MealForm;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\MealList\\index.js",["159","160","161","162"],"import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { REMOVE_MEAL } from \"../../utils/mutations\";\nimport { QUERY_MEALS } from \"../../utils/queries\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Auth from \"../../utils/auth\";\n\nconst Demo = styled(\"div\")(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst weekDays = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nconst MealList = ({ meals }) => {\n  const { loading, data } = useQuery(QUERY_MEALS);\n  const [removeMeal, { error }] = useMutation(REMOVE_MEAL);\n  const [mealList, setMealList] = useState();\n  // const [mealList, setMealList] = useState(data.meals);\n  const handleRemoveMeal = async (mealId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const { data } = await removeMeal({\n        variables: { mealId },\n      });\n\n      removeMeal(mealId);\n      console.log(data);\n      // const updatedMealList = [...mealList].filter(\n      //   (item) => item._id !== mealId\n      // );\n      // setMealList(updatedMealList);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  if (error) {\n    return `${error.message}`;\n  }\n  if (loading) {\n    return `Loading!! :)`;\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        {weekDays.map((day) => (\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <Card\n              sx={{\n                p: 2,\n                boxShadow: 2,\n                minHeight: 500,\n                backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n              }}\n            >\n              <CardContent>\n                <Typography color=\"secondary\" variant=\"h6\" component=\"div\">\n                  {day}\n                </Typography>\n                <List>\n                  {data.meals.map((meal) => {\n                    if (meal.day === day)\n                      return (\n                        <div key={meal._id}>\n                          <p> {meal.type} </p>\n                          <p> {meal.text} </p>\n                          <p>{meal.username}</p>\n                          <button\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => handleRemoveMeal(meal._id)}\n                          >\n                            {\" \"}\n                            🗑️\n                          </button>\n                        </div>\n                      );\n                  })}\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MealList;\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\HomeCards\\CardDetails.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\TripCard\\index.js",["163"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TripDetails from \"../TripDetails\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  Fab,\n} from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport AddIcon from \"@mui/icons-material/Add\";\nconst CardStyled = styled(Card)({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  maxWidth: 545,\n  minHeight: 345,\n  padding: 2,\n  margin: \"0 auto\",\n  backgroundColor: \"#DDD\",\n});\n\nexport default function TripCard() {\n  const [details, setDetails] = useState([]);\n  const detailNameRef = useRef();\n  useEffect(() => {\n    console.log(details);\n    if (details) {\n      localStorage.setItem(\"details\", JSON.stringify(details));\n    }\n  }, [details]);\n  useEffect(() => {\n    const storedDetails = JSON.parse(localStorage.getItem(\"details\"));\n    if (storedDetails) {\n      setDetails(storedDetails);\n    }\n  }, []);\n\n  function handleAddDetails(e) {\n    const detail = detailNameRef.current.value;\n    if (detail === \"\") return;\n    console.log(detail);\n    setDetails((prevDetails) => {\n      return [...prevDetails, { id: uuidv4(), detail: detail }];\n    });\n    detailNameRef.current.value = null;\n  }\n\n  return (\n    <CardStyled className=\"gradient-card\">\n      <CardContent>\n        <Typography\n          sx={{\n            color: \"#fff\",\n            fontSize: \"32px\",\n            fontWeight: 500,\n            textAlign: \"center\",\n            textShadow: \"3px 3px rgba(50, 50, 70, 0.5)\",\n          }}\n          variant=\"h4\"\n        >\n          Trip Details\n        </Typography>\n\n        <TextField\n          inputRef={detailNameRef}\n          id=\"outlined-basic\"\n          label=\"Add Details\"\n          variant=\"outlined\"\n        />\n        {details.map((detail) => {\n          return <TripDetails key={uuidv4()} detail={detail.detail} />;\n        })}\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          onClick={(e) => {\n            handleAddDetails(e);\n          }}\n        >\n          <AddIcon />\n        </Fab>\n      </CardContent>\n    </CardStyled>\n  );\n}\n","C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\BudgetCard\\index.js",[],"C:\\Users\\amach\\Documents\\GT\\projects\\adventure-planner\\client\\src\\components\\TripDetails\\index.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":28,"column":10,"nodeType":"170","messageId":"171","endLine":28,"endColumn":22},{"ruleId":"168","severity":1,"message":"172","line":28,"column":24,"nodeType":"170","messageId":"171","endLine":28,"endColumn":39},{"ruleId":"168","severity":1,"message":"173","line":34,"column":9,"nodeType":"170","messageId":"171","endLine":34,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":156,"column":23,"nodeType":"176","messageId":"177","endLine":156,"endColumn":81,"fix":"178"},{"ruleId":"174","severity":1,"message":"175","line":159,"column":23,"nodeType":"176","messageId":"177","endLine":162,"endColumn":24,"fix":"179"},{"ruleId":"174","severity":1,"message":"175","line":165,"column":23,"nodeType":"176","messageId":"177","endLine":165,"endColumn":79,"fix":"180"},{"ruleId":"174","severity":1,"message":"175","line":200,"column":23,"nodeType":"176","messageId":"177","endLine":203,"endColumn":24,"fix":"181"},{"ruleId":"174","severity":1,"message":"175","line":206,"column":23,"nodeType":"176","messageId":"177","endLine":209,"endColumn":24,"fix":"182"},{"ruleId":"174","severity":1,"message":"175","line":212,"column":23,"nodeType":"176","messageId":"177","endLine":215,"endColumn":24,"fix":"183"},{"ruleId":"174","severity":1,"message":"175","line":250,"column":23,"nodeType":"176","messageId":"177","endLine":253,"endColumn":24,"fix":"184"},{"ruleId":"174","severity":1,"message":"175","line":256,"column":23,"nodeType":"176","messageId":"177","endLine":259,"endColumn":24,"fix":"185"},{"ruleId":"174","severity":1,"message":"175","line":299,"column":23,"nodeType":"176","messageId":"177","endLine":302,"endColumn":24,"fix":"186"},{"ruleId":"168","severity":1,"message":"187","line":23,"column":11,"nodeType":"170","messageId":"171","endLine":23,"endColumn":18},{"ruleId":"168","severity":1,"message":"188","line":6,"column":9,"nodeType":"170","messageId":"171","endLine":6,"endColumn":17},{"ruleId":"168","severity":1,"message":"189","line":7,"column":9,"nodeType":"170","messageId":"171","endLine":7,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":37,"column":19,"nodeType":"192","endLine":37,"endColumn":37},{"ruleId":"190","severity":1,"message":"193","line":38,"column":17,"nodeType":"192","endLine":38,"endColumn":35},{"ruleId":"168","severity":1,"message":"194","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"195","line":25,"column":15,"nodeType":"170","messageId":"171","endLine":25,"endColumn":19},{"ruleId":"168","severity":1,"message":"196","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":12},{"ruleId":"168","severity":1,"message":"197","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"195","line":42,"column":15,"nodeType":"170","messageId":"171","endLine":42,"endColumn":19},{"ruleId":"168","severity":1,"message":"195","line":31,"column":15,"nodeType":"170","messageId":"171","endLine":31,"endColumn":19},{"ruleId":"168","severity":1,"message":"198","line":14,"column":7,"nodeType":"170","messageId":"171","endLine":14,"endColumn":11},{"ruleId":"168","severity":1,"message":"199","line":31,"column":10,"nodeType":"170","messageId":"171","endLine":31,"endColumn":18},{"ruleId":"168","severity":1,"message":"200","line":31,"column":20,"nodeType":"170","messageId":"171","endLine":31,"endColumn":31},{"ruleId":"201","severity":1,"message":"202","line":78,"column":42,"nodeType":"203","messageId":"204","endLine":78,"endColumn":44},{"ruleId":"168","severity":1,"message":"205","line":5,"column":3,"nodeType":"170","messageId":"171","endLine":5,"endColumn":6},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'dataIsLoaded' is assigned a value but never used.","Identifier","unusedVar","'setDataIsLoaded' is assigned a value but never used.","'myHeader' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"208","text":"209"},{"range":"210","text":"209"},{"range":"211","text":"209"},{"range":"212","text":"209"},{"range":"213","text":"209"},{"range":"214","text":"209"},{"range":"215","text":"209"},{"range":"216","text":"209"},{"range":"217","text":"209"},"'loading' is assigned a value but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'startDate' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","Assignments to the 'endDate' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useState' is defined but never used.","'data' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Demo' is assigned a value but never used.","'mealList' is assigned a value but never used.","'setMealList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",[4843,4843]," rel=\"noreferrer\"",[5068,5068],[5266,5266],[6560,6560],[6809,6809],[7062,7062],[8386,8386],[8640,8640],[10307,10307]]