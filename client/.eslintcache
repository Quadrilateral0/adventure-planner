[{"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\index.js":"1","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\reportWebVitals.js":"2","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\App.js":"3","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Signup.js":"4","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\MealPlanning.js":"5","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Login.js":"6","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Profile.js":"7","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Locations.js":"8","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Home.js":"9","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Dashboard.js":"10","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\SingleThought.js":"11","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\Header\\index.js":"12","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\Footer\\index.js":"13","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\utils\\auth.js":"14","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\utils\\mutations.js":"15","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\utils\\queries.js":"16","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js":"17","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js":"18","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js":"19","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js":"20","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\CommentList\\index.js":"21","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\CommentForm\\index.js":"22"},{"size":500,"mtime":1654133935140,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1654133935142,"results":"25","hashOfConfig":"24"},{"size":2399,"mtime":1654351097477,"results":"26","hashOfConfig":"24"},{"size":4485,"mtime":1654351097482,"results":"27","hashOfConfig":"24"},{"size":224,"mtime":1654203618037,"results":"28","hashOfConfig":"24"},{"size":3934,"mtime":1654351097481,"results":"29","hashOfConfig":"24"},{"size":1061,"mtime":1654203618038,"results":"30","hashOfConfig":"24"},{"size":218,"mtime":1654203618037,"results":"31","hashOfConfig":"24"},{"size":131,"mtime":1654202734969,"results":"32","hashOfConfig":"24"},{"size":452,"mtime":1654351097481,"results":"33","hashOfConfig":"24"},{"size":1562,"mtime":1654133935142,"results":"34","hashOfConfig":"24"},{"size":5198,"mtime":1654521701544,"results":"35","hashOfConfig":"24"},{"size":568,"mtime":1654202734963,"results":"36","hashOfConfig":"24"},{"size":1043,"mtime":1654133935143,"results":"37","hashOfConfig":"24"},{"size":1077,"mtime":1654133935143,"results":"38","hashOfConfig":"24"},{"size":908,"mtime":1654133935144,"results":"39","hashOfConfig":"24"},{"size":1811,"mtime":1654351097479,"results":"40","hashOfConfig":"24"},{"size":2361,"mtime":1654203618035,"results":"41","hashOfConfig":"24"},{"size":1502,"mtime":1654133935139,"results":"42","hashOfConfig":"24"},{"size":3074,"mtime":1654202734966,"results":"43","hashOfConfig":"24"},{"size":953,"mtime":1654133935138,"results":"44","hashOfConfig":"24"},{"size":2410,"mtime":1654133935137,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"qj8at0",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\index.js",[],["96","97"],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\reportWebVitals.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\App.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Signup.js",["98"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme();\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleFormSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"username\"\n                  name=\"username\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  value={formState.name}\n                  onChange={handleChange}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Signup;\n","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\MealPlanning.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Login.js",["99"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Auth from \"../utils/auth\";\n\nconst theme = createTheme();\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleFormSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Login\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n\n        {error && (\n          <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Login;\n","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Profile.js",["100","101","102","103","104"],"import React from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ThoughtForm from \"../components/ThoughtForm\";\nimport ThoughtList from \"../components/ThoughtList\";\n\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport { QUERY_THOUGHTS } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: \"1px dotted #1a1a1a\" }}\n        >\n          <ThoughtForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Profile;\n","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Locations.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Home.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\Dashboard.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\pages\\SingleThought.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\Header\\index.js",["105","106"],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\Footer\\index.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\utils\\auth.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\utils\\mutations.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\utils\\queries.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js",["107"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\CommentList\\index.js",[],"C:\\coding\\CourseWork\\adventure-planner\\client\\src\\components\\CommentForm\\index.js",["108"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":28,"column":28,"nodeType":"115","messageId":"116","endLine":28,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":25,"column":26,"nodeType":"115","messageId":"116","endLine":25,"endColumn":30},{"ruleId":"113","severity":1,"message":"117","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"118","line":2,"column":20,"nodeType":"115","messageId":"116","endLine":2,"endColumn":29},{"ruleId":"113","severity":1,"message":"119","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":20},{"ruleId":"113","severity":1,"message":"120","line":8,"column":22,"nodeType":"115","messageId":"116","endLine":8,"endColumn":30},{"ruleId":"113","severity":1,"message":"121","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":12},{"ruleId":"113","severity":1,"message":"122","line":15,"column":10,"nodeType":"115","messageId":"116","endLine":15,"endColumn":14},{"ruleId":"113","severity":1,"message":"121","line":17,"column":8,"nodeType":"115","messageId":"116","endLine":17,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":41,"column":15,"nodeType":"115","messageId":"116","endLine":41,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":19,"column":15,"nodeType":"115","messageId":"116","endLine":19,"endColumn":19},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'useParams' is defined but never used.","'QUERY_USER' is defined but never used.","'QUERY_ME' is defined but never used.","'Auth' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]