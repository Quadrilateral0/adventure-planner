[{"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\index.js":"1","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\reportWebVitals.js":"2","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\App.js":"3","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Home.js":"4","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Profile.js":"5","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Events.js":"6","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Dashboard.js":"7","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\SingleThought.js":"8","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Login.js":"9","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Signup.js":"10","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\MealPlanning.js":"11","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\assets\\colorPalette.js":"12","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\Footer\\index.js":"13","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\Header\\index.js":"14","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\utils\\auth.js":"15","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js":"16","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\utils\\queries.js":"17","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\utils\\mutations.js":"18","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js":"19","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\Locations\\index.js":"20","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\MealPlanner\\MealList.js":"21","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js":"22","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\CommentForm\\index.js":"23","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\CommentList\\index.js":"24","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js":"25","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\MealPlanner\\MealForm.js":"26","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\MealPlanner\\Meal.js":"27","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Destinations.js":"28"},{"size":852,"mtime":1654525975826,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1654198068823,"results":"31","hashOfConfig":"30"},{"size":2649,"mtime":1654536817008,"results":"32","hashOfConfig":"30"},{"size":131,"mtime":1654203022370,"results":"33","hashOfConfig":"30"},{"size":1061,"mtime":1654203022372,"results":"34","hashOfConfig":"30"},{"size":212,"mtime":1654525975826,"results":"35","hashOfConfig":"30"},{"size":452,"mtime":1654351085307,"results":"36","hashOfConfig":"30"},{"size":1562,"mtime":1654198068822,"results":"37","hashOfConfig":"30"},{"size":3635,"mtime":1654528657186,"results":"38","hashOfConfig":"30"},{"size":4083,"mtime":1654525975828,"results":"39","hashOfConfig":"30"},{"size":306,"mtime":1654525975827,"results":"40","hashOfConfig":"30"},{"size":218,"mtime":1654525975803,"results":"41","hashOfConfig":"30"},{"size":568,"mtime":1654198867342,"results":"42","hashOfConfig":"30"},{"size":5894,"mtime":1654536763426,"results":"43","hashOfConfig":"30"},{"size":1043,"mtime":1654198068823,"results":"44","hashOfConfig":"30"},{"size":1811,"mtime":1654351085306,"results":"45","hashOfConfig":"30"},{"size":908,"mtime":1654198068824,"results":"46","hashOfConfig":"30"},{"size":1077,"mtime":1654198068824,"results":"47","hashOfConfig":"30"},{"size":2402,"mtime":1654525975825,"results":"48","hashOfConfig":"30"},{"size":128,"mtime":1654525975823,"results":"49","hashOfConfig":"30"},{"size":2080,"mtime":1654525975825,"results":"50","hashOfConfig":"30"},{"size":1502,"mtime":1654198068820,"results":"51","hashOfConfig":"30"},{"size":2410,"mtime":1654198068818,"results":"52","hashOfConfig":"30"},{"size":953,"mtime":1654198068819,"results":"53","hashOfConfig":"30"},{"size":3074,"mtime":1654198867343,"results":"54","hashOfConfig":"30"},{"size":3189,"mtime":1654525975824,"results":"55","hashOfConfig":"30"},{"size":1239,"mtime":1654525975824,"results":"56","hashOfConfig":"30"},{"size":755,"mtime":1654536754916,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"h6y0qx",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\index.js",["122"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#33C4CF\",\n      main: \"#00B6C3\",\n      dark: \"#007F88\",\n      contrastText: \"#133042\",\n    },\n    secondary: {\n      light: \"#664B64\",\n      main: \"#401F3E\",\n      dark: \"#2C152B\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["123","124"],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\reportWebVitals.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\App.js",["125"],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Home.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Profile.js",["126","127","128","129","130"],"import React from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ThoughtForm from \"../components/ThoughtForm\";\nimport ThoughtList from \"../components/ThoughtList\";\n\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport { QUERY_THOUGHTS } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: \"1px dotted #1a1a1a\" }}\n        >\n          <ThoughtForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Events.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Login.js",["131"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleFormSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={formState.email}\n            onChange={handleChange}\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={formState.password}\n            onChange={handleChange}\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n\n      {error && (\n        <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n      )}\n    </Container>\n  );\n};\n\nexport default Login;\n","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Signup.js",["132"],"import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleFormSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"username\"\n                name=\"username\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                value={formState.name}\n                onChange={handleChange}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n\n          {error && (\n            <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n          )}\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\MealPlanning.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\assets\\colorPalette.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\utils\\auth.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\ResponsiveDateRangePicker\\ResponsiveDateRangePicker.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\utils\\queries.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\utils\\mutations.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\WeatherCard\\WeatherCard.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\Locations\\index.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\MealPlanner\\MealList.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\CommentForm\\index.js",["133"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\ThoughtForm\\index.js",["134"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\MealPlanner\\MealForm.js",["135"],"import React, { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\n\nfunction MealForm(props) {\n  const [input, setInput] = useState(\"\");\n  let [type, setType] = useState(\"\");\n\n  const typeLevel = [\"breakfast\", \"lunch\", \"dinner\", \"TBD\"];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!type) {\n      type = \"TBD\";\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: input,\n      type: type,\n    });\n\n    setInput(\"\");\n    setType(\"\");\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n  return !props.edit ? (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        component=\"form\"\n        className=\"meal-form\"\n        onSubmit={handleSubmit}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        {/* <form className=\"meal-form\" onSubmit={handleSubmit}> */}\n        <TextField\n          type=\"text\"\n          placeholder=\"Add to your meal list\"\n          value={input}\n          name=\"text\"\n          className=\"meal-input\"\n          onChange={handleChange}\n        ></TextField>\n        <div className=\"dropdown\">\n          <h3 className={`dropbtn ${type}`}>{type || \"Type of Meal\"}</h3>\n          <div className=\"dropdown-content\">\n            <Button onClick={() => setType(typeLevel[0])}>Breakfast</Button>\n            <Button onClick={() => setType(typeLevel[1])}>Lunch</Button>\n            <Button onClick={() => setType(typeLevel[2])}>Dinner</Button>\n          </div>\n        </div>\n        <Button type=\"submit\" className=\"meal-Button\">\n          Add meal list item\n        </Button>\n      </Box>\n    </Container>\n  ) : (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        component=\"form\"\n        className=\"meal-form\"\n        onSubmit={handleSubmit}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        <h3>Update entry: {props.edit.value}</h3>\n        {/* <form className=\"meal-form\" onSubmit={handleSubmit}> */}\n\n        <TextField\n          type=\"text\"\n          placeholder={props.edit.value}\n          value={input}\n          name=\"text\"\n          className=\"meal-input\"\n          onChange={handleChange}\n        ></TextField>\n        <div className=\"dropdown\">\n          <h4 className={`dropbtn ${type}`}>{type || \"Type of Meal\"}</h4>\n          <div className=\"dropdown-content\">\n            <Button onClick={() => setType(typeLevel[0])}>Breakfast</Button>\n            <Button onClick={() => setType(typeLevel[1])}>Lunch</Button>\n            <Button onClick={() => setType(typeLevel[2])}>Dinner</Button>\n          </div>\n        </div>\n        <Button type=\"submit\" className=\"meal-button\">\n          Update\n        </Button>\n        {/* </form> */}\n      </Box>\n    </Container>\n  );\n}\n\nexport default MealForm;\n","C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\components\\MealPlanner\\Meal.js",[],"C:\\Users\\chris\\Desktop\\Coding School\\Homework\\adventure-planner\\client\\src\\pages\\Destinations.js",["136"],{"ruleId":"137","severity":1,"message":"138","line":9,"column":7,"nodeType":"139","messageId":"140","endLine":9,"endColumn":12},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"137","severity":1,"message":"145","line":23,"column":8,"nodeType":"139","messageId":"140","endLine":23,"endColumn":14},{"ruleId":"137","severity":1,"message":"146","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"147","line":2,"column":20,"nodeType":"139","messageId":"140","endLine":2,"endColumn":29},{"ruleId":"137","severity":1,"message":"148","line":8,"column":10,"nodeType":"139","messageId":"140","endLine":8,"endColumn":20},{"ruleId":"137","severity":1,"message":"149","line":8,"column":22,"nodeType":"139","messageId":"140","endLine":8,"endColumn":30},{"ruleId":"137","severity":1,"message":"150","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":12},{"ruleId":"137","severity":1,"message":"151","line":21,"column":26,"nodeType":"139","messageId":"140","endLine":21,"endColumn":30},{"ruleId":"137","severity":1,"message":"151","line":25,"column":28,"nodeType":"139","messageId":"140","endLine":25,"endColumn":32},{"ruleId":"137","severity":1,"message":"151","line":19,"column":15,"nodeType":"139","messageId":"140","endLine":19,"endColumn":19},{"ruleId":"137","severity":1,"message":"151","line":41,"column":15,"nodeType":"139","messageId":"140","endLine":41,"endColumn":19},{"ruleId":"137","severity":1,"message":"152","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"137","severity":1,"message":"153","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":21},"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["154"],"no-negated-in-lhs",["155"],"'Events' is defined but never used.","'Navigate' is defined but never used.","'useParams' is defined but never used.","'QUERY_USER' is defined but never used.","'QUERY_ME' is defined but never used.","'Auth' is defined but never used.","'data' is assigned a value but never used.","'Avatar' is defined but never used.","'searchResults' is defined but never used.","no-global-assign","no-unsafe-negation"]